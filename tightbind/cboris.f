      SUBROUTINE CBORIS(N,ND,A,B,C,D,E,F,FAIL)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION A(ND,ND) ,B(ND,ND) ,C(ND,ND)
     *  ,D(ND),E(ND),F(ND)
      INTEGER FAIL
C
C
C  for YAeHMOP this common block is not needed
C              gL
C      COMMON/PASS/NATOM,NDIM,LB,LE,NVAL,ECUT,EERR,IDEL
C
C
C SUBROUTINE CBORIS SOLVES THE COMPLEX EIGENVALUE
C PROBLEM
C
C      A*X=B*X*LAMBDA
C
C WHERE
C
C A     --- GIVEN MATRIX OF ORDER N
C B     --- GIVEN POSITIVE DEFINITE MATRIX OF ORDER N
C X     --- EIGENVECTORS, COLUMN BY COLUMN,
C           NORMALIZED TO (BX,X)=I
C LAMBDA --- EIGENVALUES IN INCREASING ORDER
C
C MATRICES A AND B SHOULD BE GIVEN IN
C ARRAYS A AND B RESPECTIVELY IN THE FOLLOWING WAY
C
C DIAGONAL ELEMENTS IN THE DIAGONAL
C REAL PARTS OF THE LOWER TRIANGLE IN THE LOWER
C TRIANGLE
C IMAG PARTS OF THE LOWER TRIANGLE IN THE UPPER
C TRIANGLE
C
C REAL PARTS OF EIGENVECTORS ARE STORED IN A,
C IMAG PARTS IN ARRAY C.  ARRAY B IS DESTROYED DURING
C COMPUTATION.  IT HOLDS THE LOWER TRIANGLE OF THE
C CHOLESKI DECOMPOSITION OF MATRIX B (SEE
C SUBROUTINE CCHOL).
C
C ALL MATRICES ARE OF ORDER N, DECLARED IN THE
C CALLING PROGRAM WITH DIMENSION ND WHICH NEED
C NOT TO BE EQUAL TO N.
C
C EIGENVALUES ARE STORED IN ARRAY D.  ARRAYS E
C AND F ARE USED FOR INTERMEDIATE RESULTS.
C
C FAIL GETS THE FOLLOWING VALUES
C
C  0 --- COMPUTATION FINISHED SUCCESFULLY
C  1 --- B NOT POSITIVE DEFINITE
C  2 --- QR ALGORITHM DOES NOT CONVERGE
C
C SUBROUTINES USED
C
C     CCHOL
C     CTRED2
C     CTQL2
C
C
C PROGRAMMED BY E. ZAKRAJSEK
C JUNE 21,1974
C
C
C
C
C DECOMPOSE MATRIX B
C
C      WRITE(4,1918)
C1918  FORMAT(' WELCOME TO CBORIS')
C
C      CALL TIME(0)
C
      FAIL=1
      CALL CCHOL(N,ND,B,LF)
      IF(LF.NE.0) GOTO999
C
C MOVE MATRIX A
C
      DO 11 I=1,N
      C(I,I)=0.D0
      IF(I.EQ.1) GO TO 11
      IA=I-1
      DO 10 J=1,IA
      C(I,J)=A(J,I)
      C(J,I)=-A(J,I)
   10 A(J,I)=A(I,J)
   11 CONTINUE
C
C  COMPUTE (L(-1)*A)
C
      DO 22 J=1,N
      DO 22 I=1,N
      IF(I.EQ.1) GO TO 21
      IA=I-1
      DO 20 K=1,IA
      A(I,J)=A(I,J)-A(K,J)*B(I,K)+C(K,J)*B(K,I)
   20 C(I,J)=C(I,J)-A(K,J)*B(K,I)-C(K,J)*B(I,K)
   21 A(I,J)=A(I,J)/B(I,I)
   22 C(I,J)=C(I,J)/B(I,I)
C
C  COMPUTE  A*L(-H)
C
      DO 32 I=1,N
      DO 32 J=1,I
      IF(J.EQ.1) GO TO 31
      JA=J-1
      DO 30 K=1,JA
      A(I,J)=A(I,J)-A(I,K)*B(J,K)-C(I,K)*B(K,J)
   30 C(I,J)=C(I,J)+A(I,K)*B(K,J)-C(I,K)*B(J,K)
   31 A(I,J)=A(I,J)/B(J,J)
   32 C(I,J)=C(I,J)/B(J,J)
C
C     PUT MATRIX TOGETHER INTO A
C
      DO 41 I=1,N
      IF(I.EQ.N) GO TO 41
      IA=I+1
      DO 40 J=IA,N
   40 A(I,J)=C(J,I)
   41 CONTINUE
C
C     DIAGONALIZE A
C
      FAIL=2
      CALL CTRED2(N,ND,A,C,D,E,F)
      CALL CTQL2(N,ND,D,E,F,A,C,LF)
      IF(LF.NE.0) GOTO999
C
C     COMPUTE L(-H)*A
C
      DO 52 J=1,N
      DO 52 II=1,N
      I=N-II+1
      IF(I.EQ.N) GO TO 51
      IA=I+1
      DO 50 K=IA,N
      A(I,J)=A(I,J)-A(K,J)*B(K,I)-C(K,J)*B(I,K)
   50 C(I,J)=C(I,J)+A(K,J)*B(I,K)-C(K,J)*B(K,I)
   51 A(I,J)=A(I,J)/B(I,I)
      C(I,J)=C(I,J)/B(I,I)
   52 CONTINUE
      FAIL=0
C  999 WRITE(4,1919)
C 1919 FORMAT(' DONE CBORIS')
C
C      CALL TIME(0)
C
999      RETURN
      END
